////
/// This is settings for responsive views.
///
/// @group Breakpoints
/// @author Martin Rocek
////

/// Map of available breakpoints.
/// @type Map
/// @example
///     $breakpoints: (
///         small: "(max-width: 500px)",
///         big:   "(min-width: 2000px)"
///     );
$breakpoints: ();

/// Breakpoint mixin to handle responsive views.
/// @content Styles that should be modified in responsive view
///
/// @example
///     @include response-to('small') {
///         // your responsive styles ...
///     }
/// @require {function} get-breakpoint
/// @param {string | number} $min [0] - Units are required for numerical parameters.
/// @param {number} $max [0] - Units are required for numerical parameters.
@mixin respond-to($min: 0, $max: 0) {
    $type: type-of($min);
    $query: "all" !default;

    @if $type == string {
        $query: get-breakpoint($min);
    }

    // When is $min set to number, then handle it as min and max values
    @else if $type == number {
        @if $min != 0 and $max != 0 {
            $query: "(min-width: #{$min}) and (max-width: #{$max})";
        }

        @else if $min != 0 and $max == 0 {
            $query: "(min-width: #{$min})";
        }

        @else if $min == 0 and $max != 0 {
            $query: "(max-width: #{$max})";
        }
    }

    @else {
        @error 'No value found for `#{$breakpoint}`. '
             + 'Please make sure it is defined in `$breakpoints` map.';
    }

    @media #{$query} {
        @content;
    }
}

/// Get breakpoint from map list of breakpoints.
///
/// @require {variable} $breakpoints
/// @param {string} $breakpoint-name
/// @throw Undefined breakpoint name for key #{$breakpoint-name} if there is no breakpoint with given name.
/// @return {string | null}
@function get-breakpoint($breakpoint-name)
{
    @if map-has-key($breakpoints, $breakpoint-name) {
        @return map-get($breakpoints, $breakpoint-name);
    }

    @warn error(get-breakpoint, "Undefined breakpoint layout for key '#{$breakpoint-name}'.");

    @return null;
}